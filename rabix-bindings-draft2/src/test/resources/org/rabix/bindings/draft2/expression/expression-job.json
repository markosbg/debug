{
	"inputs": 
	{
		"reference": 
		{
			"class": "File",
			"path": "rabix/tests/test-files/chr20.fa",
			"size": 123,
			"checksum": "sha1$hash"
		},

		"reads": 
		[
			{
				"class": "File",
				"path": "rabix/tests/test-files/example_human_Illumina.pe_1.fastq"
			},

			{
				"class": "File",
				"path": "rabix/tests/test-files/example_human_Illumina.pe_2.fastq"
			}
		],

		"min_std_max_min": 
		[
			1,
			2,
			3,
			4
		],

		"minimum_seed_length": 3
	},

	"app": 
	{
		"id": "some_id",
		"class": "CommandLineTool",
		"hints": 
		[
			{
				"class": "sbg:CPURequirement",
				"value": 1
			},

			{
				"class": "sbg:MemRequirement",
				"value": 42
			}
		],

		"requirements": 
		[
			{
				"class": "DockerRequirement",
				"dockerPull": "test",
				"dockerImageId": "test"
			},

			{
				"id": "#cwl-js-engine",
				"class": "ExpressionEngineRequirement",
				"engineConfig": 
				[
					"var func = function() { return 6; };",
					"var x = func();"
				]
			},

			{
				"class": "EnvVarRequirement",
				"envDef": 
				[
					{
						"envName": "KEY",
						"envValue": "VALUE"
					},

					{
						"envName": "KEY_EXPR",
						"envValue": 
						{
							"class": "Expression",
							"engine": "#cwl-js-engine",
							"script": "{return 'VALUE_EXPR'}"
						}
					}
				]
			}
		],

		"inputs": 
		[
			{
				"id": "#reference",
				"type": 
				{
					"type": "File",
					"adapter": 
					{
						"position": 2
					}
				}
			},

			{
				"id": "#reads",
				"type": 
				{
					"type": "array",
					"items": "File",
					"adapter": 
					{
						"position": 3
					}
				}
			},

			{
				"id": "#minimum_seed_length",
				"type": 
				{
					"type": "int",
					"adapter": 
					{
						"position": 1,
						"prefix": "-m"
					}
				}
			},

			{
				"id": "#min_std_max_min",
				"type": 
				{
					"items": "int",
					"type": "array",
					"adapter": 
					{
						"itemSeparator": ",",
						"position": 1,
						"prefix": "-I"
					}
				}
			}
		],

		"outputs": 
		[
			{
				"id": "#sam",
				"type": 
				{
					"type": "File",
					"adapter": 
					{
						"glob": "output.sam"
					}
				}
			}
		],

		"arguments": 
		[
			{
				"valueFrom": 
				{
					"class": "Expression",
					"engine": "#cwl-js-engine",
					"script": "{return 1 + 2}"
				},

				"position": 1,
				"prefix": "-t"
			}
		],

		"baseCommand": 
		[
			"bwa",
			"mem"
		],

		"stdout": "output.sam"
	}
}